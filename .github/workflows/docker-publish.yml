name: Monitor and Update Alephium Mainnet

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allows you to trigger the workflow manually

jobs:
  pull-tag-and-push-image:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Your Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Your Docker Hub password

      # Step 2: Pull the latest Alephium Docker Image
      - name: Pull Latest Alephium Docker Image
        run: |
          LATEST_VERSION=$(curl -s https://hub.docker.com/v2/repositories/alephium/alephium/tags/?page_size=1 | jq -r '.results[0].name')
          echo "Latest version: $LATEST_VERSION"
          docker pull alephium/alephium:$LATEST_VERSION  # Pull the latest Alephium image

      # Step 3: Tag the Docker image for your Docker Hub repo
      - name: Tag Docker Image
        run: |
          LATEST_VERSION=$(curl -s https://hub.docker.com/v2/repositories/alephium/alephium/tags/?page_size=1 | jq -r '.results[0].name')
          docker tag alephium/alephium:$LATEST_VERSION cyxeio/mainnet:latest
          docker tag alephium/alephium:$LATEST_VERSION cyxeio/mainnet:$LATEST_VERSION
          docker tag alephium/alephium:$LATEST_VERSION cyxeio/mainnet:$(date +%Y%m%d%H%M)

      # Step 4: Verify the tags created locally before pushing
      - name: List Docker Images and Tags
        run: |
          docker images  # List all images and tags

      # Step 5: Push the newly tagged image to your Docker Hub repository
      - name: Push Docker Image to Docker Hub
        run: |
          LATEST_VERSION=$(curl -s https://hub.docker.com/v2/repositories/alephium/alephium/tags/?page_size=1 | jq -r '.results[0].name')
          docker push cyxeio/mainnet:latest
          docker push cyxeio/mainnet:$LATEST_VERSION  # Push the latest version tag
          docker push cyxeio/mainnet:$(date +%Y%m%d%H%M)

      # Step 6: Clean up unused Docker images to save space
      - name: Cleanup Docker Images
        run: docker image prune -f
