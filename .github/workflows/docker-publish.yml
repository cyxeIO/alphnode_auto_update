name: Monitor and Update Alephium Mainnet

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allows you to trigger the workflow manually

jobs:
  update-mainnet:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Clone the Alephium Stack repository
      - name: Checkout Alephium Stack
        uses: actions/checkout@v2
        with:
          repository: alephium/alephium-stack
          path: alephium-stack

      # Step 2: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      # Step 3: Overwrite the Makefile with the new content
      - name: Overwrite Makefile for Mainnet
        run: |
          cd alephium-stack
          cat << 'EOF' > Makefile
          # Makefile for Alephium Mainnet

          .ONESHELL:

          all: help

          # MAINNET TARGETS
          start-mainnet: ## start the mainnet
          	@echo 'Starting mainnet...'
          	cd mainnet && \
              if docker --help | grep -q 'compose'; then \
                docker compose up -d --force-recreate --remove-orphans; \
              else \
                docker-compose up -d --force-recreate --remove-orphans; \
              fi
          	@echo 'Mainnet started.'

          stop-mainnet: ## stop the mainnet
          	@echo 'Stopping mainnet...'
          	cd mainnet && \
              if docker --help | grep -q 'compose'; then \
                docker compose down; \
              else \
                docker-compose down; \
              fi
          	@echo 'Mainnet stopped.'

          restart-mainnet: ## restart the mainnet
          	@make stop-mainnet
          	@make start-mainnet

          help: ## print this help
          	@grep '##' $(MAKEFILE_LIST) \
          		| grep -Ev 'grep|###' \
          		| sed -e 's/^\([^:]*\):[^#]*##\([^#]*\)$$/\1:\2/' \
          		| awk -F ":" '{ printf "%-25s%s\n", "\033[1;32m" $$1 ":\033[m", $$2 }' \
          		| grep -v 'sed'
          EOF

      # Step 4: Build the Docker image for mainnet (Build the image from Dockerfile)
      - name: Build Docker Image
        run: |
          cd alephium-stack/mainnet
          docker-compose build --no-cache
          docker tag cyxeio/alphnode_test:latest cyxeio/alphnode_test:$(date +%Y%m%d%H%M)
          docker push cyxeio/alphnode_test:$(date +%Y%m%d%H%M)
          docker push cyxeio/alphnode_test:latest

      # Step 5: Use the Makefile to start the mainnet (after the image has been built)
      - name: Start Mainnet
        run: |
          cd alephium-stack
          make start-mainnet

      # Step 6: Stop the mainnet after building
      - name: Stop Mainnet
        run: |
          cd alephium-stack
          make stop-mainnet

      # Step 7: Clean up unused Docker images
      - name: Cleanup Docker Images
        run: docker image prune -f
