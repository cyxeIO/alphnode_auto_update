name: Monitor and Update Alephium Image

on:
  # Run on a schedule (e.g., every day at midnight) to check for changes in the Alephium repository
  schedule:
    - cron: '0 0 * * *'  # Daily
  # Run on push to your main repository (optional)
  push:
    branches:
      - main

jobs:
  update-docker-image:
    runs-on: ubuntu-latest

    steps:
      # 1. Clone the Alephium Stack repository
      - name: Checkout Alephium Stack
        uses: actions/checkout@v2
        with:
          repository: alephium/alephium-stack
          path: alephium-stack

      # 2. Check if the Alephium Docker image version has changed
      - name: Check for Image Update
        id: check_image_update
        run: |
          cd alephium-stack/mainnet
          # Extract the current version from the docker-compose.yml
          current_version=$(grep 'image: alephium/alephium:' docker-compose.yml | awk -F: '{print $3}')
          # Check if the image version is already up-to-date in your repository
          if [[ $current_version == $(cat ../../latest_alephium_version) ]]; then
            echo "No new version of Alephium image."
            exit 0
          else
            echo "New version detected: $current_version"
            echo $current_version > ../../latest_alephium_version
          fi

      # 3. Build and push a new Docker image if the version changed
      - name: Build and Push New Docker Image
        if: steps.check_image_update.outputs.new_version == 'true'
        run: |
          cd alephium-stack/mainnet
          docker-compose build --no-cache
          docker tag cyxeio/alphnode_test:latest cyxeio/alphnode_test:$current_version
          docker push cyxeio/alphnode_test:$current_version
          docker push cyxeio/alphnode_test:latest

      # Clean up unused Docker images
      - name: Cleanup Docker Images
        run: docker image prune -f
