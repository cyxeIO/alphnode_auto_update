name: Monitor and Update Alephium Mainnet Docker Images

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allows you to trigger the workflow manually

jobs:
  pull-tag-and-push-image:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Your Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Your Docker Hub password

      # Step 2: Fetch the latest Alephium Docker image version in x.x.x format
      - name: Fetch Latest Alephium Version
        id: fetch_version
        shell: bash
        run: |
          # Fetch latest version from Docker Hub
          LATEST_VERSION=$(curl -s https://hub.docker.com/v2/repositories/alephium/alephium/tags/?page_size=1 | jq -r '.results[0].name')
          echo "Fetched version: $LATEST_VERSION"
          
          # Remove 'v' prefix if present and extract x.x.x format only
          CLEAN_VERSION=$(echo $LATEST_VERSION | sed 's/^v//' | grep -oE '^[0-9]+\.[0-9]+\.[0-9]+')
          
          if [[ -z "$CLEAN_VERSION" ]]; then
            echo "Error: Could not extract valid version from $LATEST_VERSION"
            exit 1
          fi
          
          echo "Clean version: $CLEAN_VERSION"
          echo "::set-output name=version::$CLEAN_VERSION"

      # Step 3: Pull the latest Alephium Docker image based on the fetched version
      - name: Pull Latest Alephium Docker Image
        run: |
          docker pull alephium/alephium:${{ steps.fetch_version.outputs.version }}

      # Step 4: Tag the Docker image for your Docker Hub repo
      - name: Tag Docker Image
        run: |
          docker tag alephium/alephium:${{ steps.fetch_version.outputs.version }} cyxeio/mainnet:latest
          docker tag alephium/alephium:${{ steps.fetch_version.outputs.version }} cyxeio/mainnet:${{ steps.fetch_version.outputs.version }}
          docker tag alephium/alephium:${{ steps.fetch_version.outputs.version }} cyxeio/mainnet:$(date +%Y%m%d%H%M)

      # Step 5: Verify the tags created locally before pushing
      - name: List Docker Images and Tags
        run: docker images

      # Step 6: Push the newly tagged image to your Docker Hub repository
      - name: Push Docker Image to Docker Hub
        run: |
          docker push cyxeio/mainnet:latest
          docker push cyxeio/mainnet:${{ steps.fetch_version.outputs.version }}
          docker push cyxeio/mainnet:$(date +%Y%m%d%H%M)

      # Step 7: Clean up unused Docker images to save space
      - name: Cleanup Docker Images
        run: docker image prune -f
