name: Monitor and Update Alephium Mainnet Docker Images

on:
  push:
    branches:
      - main
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allows you to trigger the workflow manually

jobs:
  pull-tag-and-push-image:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Your Docker Hub username
          password: ${{ secrets.DOCKER_PASSWORD }}  # Your Docker Hub password

      # Step 2: Fetch the latest Alephium Docker image version (including suffixes like '-adoptjdk')
      - name: Fetch Latest Alephium Version
        id: fetch_version
        shell: bash
        run: |
          # Fetch latest version from Docker Hub
          LATEST_VERSION=$(curl -s https://hub.docker.com/v2/repositories/alephium/alephium/tags/?page_size=1 | jq -r '.results[0].name')
          echo "Fetched version: $LATEST_VERSION"
          
          if [[ -z "$LATEST_VERSION" ]]; then
            echo "Error: Could not fetch a valid version from Docker Hub"
            exit 1
          fi
          
          echo "::set-output name=version::$LATEST_VERSION"

      # Step 3: Build the Docker image with the snapshot from the Downloads folder
      - name: Build Docker Image with Local Snapshot
        run: |
          # Copy the downloaded snapshot from your local machine into the Docker build context
          cp ~/Downloads/full-node-data--without-indexes-2024-12-14.tar ./snapshot.tar

          # Create Dockerfile for snapshot
          cat <<EOF > Dockerfile
          FROM alephium/alephium:${{ steps.fetch_version.outputs.version }}
          ENV ALEPHIUM_HOME=/alephium-home/.alephium
          ENV ALEPHIUM_NETWORK=mainnet
          ENV SNAPSHOT_FILE="/tmp/snapshot.tar"

          # Switch to root to install necessary packages
          USER root

          # Install curl and extract the snapshot
          RUN apt-get update && apt-get install -y curl && \
              echo "Copying Alephium snapshot from build context..." && \
              cp \$SNAPSHOT_FILE /tmp/ && \
              echo "Extracting snapshot..." && \
              tar --strip-components=1 -xv -f /tmp/snapshot.tar -C \$ALEPHIUM_HOME && \
              rm /tmp/snapshot.tar && \
              apt-get clean

          # Switch back to non-root user
          USER alephium

          ENTRYPOINT ["/bin/bash", "-c", "/alephium/bin/alephium-entrypoint.sh"]
          EOF

          # Build the Docker image
          docker build -t dohmoney/mainnet:latest .

      # Step 4: Tag the Docker image
      - name: Tag Docker Image
        run: |
          docker tag dohmoney/mainnet:latest dohmoney/mainnet:${{ steps.fetch_version.outputs.version }}
          docker tag dohmoney/mainnet:latest dohmoney/mainnet:$(date +%Y%m%d%H%M)

      # Step 5: Verify the tags created locally before pushing
      - name: List Docker Images and Tags
        run: docker images

      # Step 6: Push the newly tagged image to your Docker Hub repository
      - name: Push Docker Image to Docker Hub
        run: |
          docker push dohmoney/mainnet:latest
          docker push dohmoney/mainnet:${{ steps.fetch_version.outputs.version }}
          docker push dohmoney/mainnet:$(date +%Y%m%d%H%M)

      # Step 7: Clean up unused Docker images to save space
      - name: Cleanup Docker Images
        run: docker image prune -f
